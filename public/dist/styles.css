@import url(https://fonts.googleapis.com/css?family=Muli);/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }
* {
  box-sizing: border-box; }

html {
  font-size: 62.5%; }

body {
  color: #333;
  font-family: 'Muli', sans-serif;
  font-size: 1.6rem;
  line-height: 1.6; }

button {
  cursor: pointer; }

button:disabled {
  cursor: default; }

.is-active {
  font-weight: bold; }

.box-layout {
  align-items: center;
  display: flex;
  height: 100vh;
  width: 100vw;
  justify-content: center; }

.box-layout__box {
  background: rgba(74, 91, 107, 0.85);
  border-radius: 3px;
  padding: 3.2rem 1.6rem;
  text-align: center;
  width: 25rem;
  color: white; }

.box-layout__title {
  margin: 0 0 1.6rem 0;
  line-height: 1; }

.button {
  background: #385168;
  border: none;
  font-size: 1.8rem;
  font-weight: 400;
  border-radius: 5px;
  padding: 1.2rem;
  text-decoration: none;
  display: inline-block;
  line-height: 1;
  padding: 1.2rem;
  color: white; }

.button--margin {
  margin-top: 1.6rem; }

.button--link {
  background: none;
  color: white; }

.button--form {
  background: #b016a7;
  color: white; }

.button--remove {
  background: #888;
  /* color: white; */ }

.button--skip {
  float: right;
  margin: 1.2rem 1.2rem 0 0; }

.button--without-border {
  background: none;
  border: none;
  color: #b016a7;
  padding: 0; }

.header {
  background: #385168;
  font-family: 'Righteous', cursive; }

.header__title {
  font-family: 'Gloria Hallelujah', cursive;
  color: #cee8f2;
  text-decoration: none; }
  .header__title h2 {
    margin: 0; }

.header__content {
  align-items: center;
  display: flex;
  justify-content: space-between;
  padding: 1.2rem 0; }

a:hover {
  text-decoration: none;
  color: white; }

.content-container {
  margin: 0 auto;
  max-width: 80rem;
  padding: 0 1.6rem; }

@media (min-width: 45rem) {
  .show-for-mobile {
    display: none; } }

@media (max-width: 44.99rem) {
  .show-for-desktop {
    display: none; } }

.loader {
  align-items: center;
  display: flex;
  justify-content: center;
  height: 100vh;
  width: 100vw; }

.loader__image {
  height: 40rem;
  width: 40rem; }

.login-background {
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.5) 100%), url("/images/bg.jpg"); }

.profile-group-row {
  display: flex;
  flex-direction: row; }

.profile-group-row__item {
  margin-right: 1.2rem; }

.profile-group-column {
  display: flex;
  margin-bottom: 1.6rem;
  flex-direction: column; }

.profile-group-column__item {
  margin-bottom: 1.2rem; }

.profile-group-smaller-column__item {
  margin-bottom: 0.4rem; }

.profileImage {
  width: 30%;
  height: 25%;
  margin: 1.66%;
  border-radius: 5px; }

.ReactModal__Overlay {
  opacity: 0;
  display: flex;
  justify-content: center;
  align-items: center; }

.ReactModal__Overlay--after-open {
  opacity: 1;
  transition: opacity 200ms ease-in-out; }

.ReactModal__Overlay--before-close {
  opacity: 0; }

.update-details-modal {
  background: #464b5e;
  color: white;
  max-width: 30rem;
  outline: none;
  padding: 3.2rem;
  text-align: center;
  border-radius: 10px; }

.update-details-modal__title {
  margin: 0 0 1.6rem 0; }

.update-details-modal__body {
  font-size: 2rem;
  font-weight: 300;
  margin: 0 0 3.2rem 0;
  word-break: break-all; }

.dashboard {
  display: flex;
  flex-wrap: wrap;
  border-radius: 5px;
  flex-direction: row; }

.dashboard__cards {
  width: 30%;
  margin: 1.66%; }

.text-input, .select {
  border: 1px solid #cacccd;
  height: 50px;
  font-size: 1.8rem;
  font-weight: 300;
  padding: 1.2rem; }

.text-input--alt {
  width: 300px; }

.input-group {
  display: flex;
  margin-top: 1.6rem;
  margin-bottom: 1.6rem;
  flex-direction: column;
  justify-content: center; }
  @media (min-width: 45rem) {
    .input-group {
      flex-direction: row;
      align-items: center;
      margin-bottom: 3.2rem; } }

.input-group__item {
  margin-bottom: 1.2rem; }
  @media (min-width: 45rem) {
    .input-group__item {
      margin: 0 1.2rem 0 0; } }

svg {
  margin: 0 auto;
  display: block; }

.tick line {
  stroke: #ccc;
  stroke-dasharray: 10, 5; }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/